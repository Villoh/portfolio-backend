server:
  port: 8080
  error:
    whitelabel:
      enabled: false # This disables the default error page

spring:
  application:
    name: portfolio-backend

#  grpc:
#    server:
#      port: 8080   # gRPC port
#      servlet:
#        enabled: true

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    generate-ddl: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true

  messages:
    basename: messages
    encoding: UTF-8

mail:
  host: ${MAIL_HOST:smtp.example.com}
  port: ${MAIL_PORT:587}
  username: ${MAIL_USERNAME:your@email.com}
  password: ${MAIL_PASSWORD:yourpassword}
  auth: true
  starttls: true

# Uncomment the datasource section if you want to connect to a database
#  datasource:
#    url: jdbc:postgresql://postgres:5432/portfolio
#    username: postgres
#    password: postgres
#    driver-class-name: org.postgresql.Driver

# Uncomment the following section if you want to use Kafka
#  kafka:
#    bootstrap-servers: kafka:9092

  jackson:
    serialization:
      INDENT_OUTPUT: true

springdoc:
  info:
    title: "Portfolio Backend API Documentation"
    description: |
      This API provides a comprehensive backend for the Portfolio application, supporting multiple protocols (REST, WebSocket, SSE, GraphQL, gRPC) and offering endpoints for personal information, contact messaging, greetings, live metrics, and real-time voting. 
      
      Features:
      - Localized About Me information
      - Contact message delivery via email
      - Personalized greetings
      - Live system and JVM metrics
      - Real-time voting for programming languages
      
      Built with Java 21, Spring Boot 3, and a hexagonal architecture for maintainability and scalability.
    version: 1.0.1
    base-package: dev.villoh.portfolio.backend
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
    display-request-duration: true
  api-docs:
    path: /v3/api-docs

# CORS global config (si lo necesitas)
cors:
  allowed-origins: "http://localhost:3000"
  allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"

management:
  endpoints:
    web:
      exposure:
        include: health